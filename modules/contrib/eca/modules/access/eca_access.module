<?php

/**
 * @file
 * ECA Access module file.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Cache\RefinableCacheableDependencyInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\eca_access\HookHandler;

/**
 * Helper function to return the hook handler service.
 *
 * @return \Drupal\eca_access\HookHandler
 *   The hook handler service.
 */
function _eca_access_hook_handler(): HookHandler {
  return \Drupal::service('eca_access.hook_handler');
}

/**
 * Implements hook_entity_access().
 */
function eca_access_entity_access(EntityInterface $entity, $operation, AccountInterface $account) {
  /** @var \Drupal\eca_access\Event\EntityAccess $event */
  if ($event = _eca_access_hook_handler()->entityAccess($entity, $operation, $account)) {
    if ($result = $event->getAccessResult()) {
      if ($result instanceof RefinableCacheableDependencyInterface) {
        // Disable caching on dynamically determined access.
        $result->mergeCacheMaxAge(0);
      }
      return $result;
    }
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_entity_field_access().
 */
function eca_access_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {
  // Need the field item list to retreive the according entity.
  /** @var \Drupal\eca_access\Event\EntityAccess $event */
  if ($items && ($event = _eca_access_hook_handler()->fieldAccess($items->getEntity(), $operation, $account, $field_definition->getName()))) {
    if ($result = $event->getAccessResult()) {
      if ($result instanceof RefinableCacheableDependencyInterface) {
        // Disable caching on dynamically determined access.
        $result->mergeCacheMaxAge(0);
      }
      return $result;
    }
  }

  return AccessResult::neutral();
}

/**
 * Implements hook_entity_create_access().
 */
function eca_access_entity_create_access(AccountInterface $account, array $context, $entity_bundle = NULL) {
  if (!isset($entity_bundle)) {
    // Entities without bundles usually use the entity type ID, e.g. users.
    $entity_bundle = $context['entity_type_id'];
  }

  /** @var \Drupal\eca_access\Event\CreateAccess $event */
  if ($event = _eca_access_hook_handler()->createAccess($context, $entity_bundle, $account)) {
    if ($result = $event->getAccessResult()) {
      if ($result instanceof RefinableCacheableDependencyInterface) {
        // Disable caching on dynamically determined access.
        $result->mergeCacheMaxAge(0);
      }
      return $result;
    }
  }

  return AccessResult::neutral();
}
